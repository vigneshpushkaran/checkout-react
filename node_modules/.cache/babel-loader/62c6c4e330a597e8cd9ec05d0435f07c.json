{"ast":null,"code":"var _jsxFileName = \"/Users/vigpushk/ProjectWork/toptal/toptal-checkout-react/src/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService'; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  addProduct,\n  removeProduct\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: availableCount === 0,\n        onClick: _event => addProduct(id),\n        className: styles.actionButton,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: orderedQuantity === 0,\n        onClick: _event => removeProduct(id),\n        className: styles.actionButton,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [isloading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  const [overAllTotal, setOverAllTotal] = useState(0);\n  const [discount, setDiscount] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      const products = await getProducts();\n      setLoading(false);\n      const orderProducts = products.map(product => ({ ...product,\n        orderedQuantity: 0,\n        total: 0\n      }));\n      setProducts(orderProducts);\n    };\n\n    fetchData();\n  }, []);\n\n  const addProduct = id => {\n    const upd = products.map(product => {\n      if (product.id === id) {\n        const ordCount = product.orderedQuantity + 1;\n        const total = product.total + product.price;\n        const oAT = overAllTotal + product.price;\n        updateDiscount(oAT);\n        return { ...product,\n          availableCount: product.availableCount - 1,\n          orderedQuantity: ordCount,\n          total: Number(total.toFixed(2))\n        };\n      }\n\n      return product;\n    });\n    setProducts(upd);\n  };\n\n  const removeProduct = id => {\n    const upd = products.map(product => {\n      if (product.id === id) {\n        const ordCount = product.orderedQuantity - 1;\n        const total = product.total - product.price;\n        const oAT = overAllTotal - product.price;\n        updateDiscount(oAT);\n        return { ...product,\n          availableCount: product.availableCount + 1,\n          orderedQuantity: ordCount,\n          total: Number(total.toFixed(2))\n        };\n      }\n\n      return product;\n    });\n    setProducts(upd);\n  };\n\n  const updateDiscount = total => {\n    if (total > 1000) {\n      const discountLocal = Number((total * 10 / 100).toFixed(2));\n      setDiscount(discountLocal);\n    }\n\n    setOverAllTotal(Number(total.toFixed(2)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isloading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children:\n          /* Products should be rendered here */\n          products.length > 0 ? products.map(product => /*#__PURE__*/_createElement(Product, { ...product,\n            key: product.id,\n            addProduct: addProduct,\n            removeProduct: removeProduct,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }\n          })) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), discount > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Discount: $ \", discount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", overAllTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total After Discount: $ \", Number((overAllTotal - discount).toFixed(2))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"DsVCB6gCDEwQ+LX0Bun/6uSQZPU=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["/Users/vigpushk/ProjectWork/toptal/toptal-checkout-react/src/Checkout.js"],"names":["React","useEffect","useState","styles","LoadingIcon","getProducts","Product","id","name","availableCount","price","orderedQuantity","total","addProduct","removeProduct","_event","actionButton","Checkout","isloading","setLoading","products","setProducts","overAllTotal","setOverAllTotal","discount","setDiscount","fetchData","orderProducts","map","product","upd","ordCount","oAT","updateDiscount","Number","toFixed","discountLocal","header","table","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService';\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nconst Product = ({ id, name, availableCount, price, orderedQuantity, total, addProduct, removeProduct }) => {\n  return (\n    <tr key={id}>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button disabled={availableCount === 0} onClick={_event => addProduct(id)} className={styles.actionButton}>+</button>\n        <button disabled={orderedQuantity === 0} onClick={_event => removeProduct(id)} className={styles.actionButton}>-</button>\n      </td>\n    </tr>\n  );\n}\n\n\nconst Checkout = () => {\n\n  const [isloading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  const [overAllTotal, setOverAllTotal] = useState(0);\n  const [discount, setDiscount] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const products = await getProducts();\n      setLoading(false);\n      const orderProducts = products.map(product => ({ ...product, orderedQuantity: 0, total: 0 }));\n      setProducts(orderProducts);\n    }\n    fetchData();\n  }, []);\n\n  const addProduct = (id) => {\n    const upd = products.map(product => {\n      if (product.id === id) {\n        const ordCount = product.orderedQuantity + 1;\n        const total = product.total + product.price;\n        const oAT = overAllTotal + product.price;\n        updateDiscount(oAT);\n        return { ...product, availableCount: product.availableCount - 1, orderedQuantity: ordCount, total: Number(total.toFixed(2)) };\n      }\n      return product\n    });\n    setProducts(upd);\n  }\n\n  const removeProduct = (id) => {\n    const upd = products.map(product => {\n      if (product.id === id) {\n        const ordCount = product.orderedQuantity - 1;\n        const total = product.total - product.price;\n        const oAT = overAllTotal - product.price;\n        updateDiscount(oAT);\n        return { ...product, availableCount: product.availableCount + 1, orderedQuantity: ordCount, total: Number(total.toFixed(2)) };\n      }\n      return product\n    });\n    setProducts(upd);\n  }\n\n  const updateDiscount = (total) => {\n    if (total > 1000) {\n      const discountLocal = Number(((total * 10) / 100).toFixed(2));\n      setDiscount(discountLocal);\n    }\n    setOverAllTotal(Number(total.toFixed(2)));\n  }\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {isloading ? <LoadingIcon /> : null}\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              /* Products should be rendered here */\n              products.length > 0 ? products.map((product) =>\n                < Product {...product} key={product.id} addProduct={addProduct} removeProduct={removeProduct}></Product>\n              )\n                : null\n            }\n\n\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        {discount > 0 ? <p>Discount: $ {discount} </p> : null}\n        <p>Total: ${overAllTotal}</p>\n        <p>Total After Discount: $ {Number((overAllTotal - discount).toFixed(2))}</p>\n      </main>\n    </div >\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}